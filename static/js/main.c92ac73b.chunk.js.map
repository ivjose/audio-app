{"version":3,"sources":["data/sample-audio.wav","hooks/useDebounce.js","features/audioBar/audioBarSlice.js","components/Button.js","components/MenuDropdown.js","features/audioBar/AudioControl.js","features/audioBar/helpers.js","features/audioBar/AudioLine.js","components/SearchBox.js","features/audioBar/components/Conversation.js","features/audioBar/AudioConversation.js","features/audioBar/AudioBar.js","App.js","app/reducer.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","audioBarSlice","createSlice","name","initialState","status","ended","currentTime","duration","speed","filterWord","data","transcriptText","wordTimings","userOne","userTwo","reducers","setPlay","state","setStop","setPause","setEnd","setSpeed","action","payload","updateCurrentTime","getDuration","getAudioData","transcript_text","word_timings","filter","item","key","flat","totalOne","reduce","a","b","parseFloat","endTime","startTime","totalTwo","updateSearchWord","actions","StyledButton","styled","button","props","primary","theme","colors","white","secondary","lightGray","Button","children","Styled","Wrapper","div","MenuText","Menu","ul","lighterGray","MenuDropdown","option","text","onClick","map","menu","label","pauseIcon","process","playIcon","rewind","rewindHover","fastForward","fastForwardHover","share","section","LeftContorl","MainControl","PlayButton","RewindIcon","i","FastForwardIcon","AudioControl","skip","handlePlay","handlePause","handleSpeed","isPlay","useMemo","src","alt","type","inBetween","selected","min","max","compareWord","wordOne","wordTwo","includes","secondsToMinutes","timeInSeconds","pad","num","size","slice","time","toFixed","minutes","Math","floor","seconds","percentage","partialValue","totalValue","percentValue","round","dimeWhite","MainBar","BarContainer","width","BarGroup","Bar","lightBlue","purple","BarTransparent","GroupLabel","Label","TimeWrapper","span","AudioLine","userOneTime","userTwoTime","newTime","totalTime","getStatus","useCallback","start","className","searchIcon","Icon","img","Input","input","SearchBox","id","Word","searched","yellow","Conversation","active","lighterBlue","lightPurple","ClearAction","user","paddingLeft","tabIndex","word","alert","AudioConversation","searchWord","handleSelectWord","handleSearchWord","handleClearSearch","countFilteredWord","placeholder","onChange","length","some","AudioBar","Audio","audioData","audio","setSearchWord","dispatch","useDispatch","useSelector","audioBar","debouncedSearchWord","handleLoadAudio","addEventListener","removeEventListener","handleUpdateTime","updatedTime","play","pause","handleSkip","selectedSpeed","playbackRate","event","target","trim","dark","App","styles","css","reducer","audioBarReducer","middleware","getDefaultMiddleware","logger","configureStore","devTools","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c92ac73b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample-audio.eb171bfb.wav\";","import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const initialState = {\r\n  status: \"stop\",\r\n  ended: false,\r\n  currentTime: 0,\r\n  duration: 0,\r\n  speed: 1,\r\n  filterWord: \"\",\r\n  data: {\r\n    transcriptText: [],\r\n    wordTimings: [],\r\n    userOne: \"\",\r\n    userTwo: \"\",\r\n  },\r\n};\r\n\r\nexport const audioBarSlice = createSlice({\r\n  name: \"audioBar\",\r\n  initialState,\r\n  reducers: {\r\n    setPlay: (state) => {\r\n      state.status = \"play\";\r\n    },\r\n    setStop: (state) => {\r\n      state.status = \"stop\";\r\n    },\r\n    setPause: (state) => {\r\n      state.status = \"pause\";\r\n    },\r\n    setEnd: (state) => {\r\n      state.ended = true;\r\n    },\r\n    setSpeed: (state, action) => {\r\n      state.speed = action.payload;\r\n    },\r\n    updateCurrentTime: (state, action) => {\r\n      state.currentTime = action.payload;\r\n    },\r\n    getDuration: (state, action) => {\r\n      state.duration = action.payload;\r\n    },\r\n    getAudioData: (state, action) => {\r\n      const {\r\n        transcript_text: transcriptText,\r\n        word_timings: wordTimings,\r\n      } = action.payload;\r\n\r\n      const userOne = wordTimings\r\n        .filter((item, key) => (key % 2 === 0 ? item : null))\r\n        .flat();\r\n\r\n      const userTwo = wordTimings\r\n        .filter((item, key) => (key % 2 !== 0 ? item : null))\r\n        .flat();\r\n\r\n      const totalOne = userOne.reduce(\r\n        (a, b) => a + (parseFloat(b.endTime) - parseFloat(b.startTime)),\r\n        0\r\n      );\r\n\r\n      const totalTwo = userTwo.reduce(\r\n        (a, b) => a + (parseFloat(b.endTime) - parseFloat(b.startTime)),\r\n        0\r\n      );\r\n\r\n      state.data.transcriptText = transcriptText;\r\n      state.data.wordTimings = wordTimings;\r\n      state.data.userOne = totalOne;\r\n      state.data.userTwo = totalTwo;\r\n    },\r\n    updateSearchWord: (state, action) => {\r\n      state.filterWord = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setPlay,\r\n  setStop,\r\n  setPause,\r\n  setEnd,\r\n  updateCurrentTime,\r\n  getDuration,\r\n  getAudioData,\r\n  updateSearchWord,\r\n  setSpeed,\r\n} = audioBarSlice.actions;\r\n\r\nexport default audioBarSlice.reducer;\r\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledButton = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${(props) =>\n    props.primary ? props.theme.colors.primary : props.theme.colors.white};\n  color: ${(props) =>\n    props.primary ? props.theme.colors.white : props.theme.colors.secondary};\n  font-weight: 600;\n  font-size: 1em;\n  margin: 0;\n  padding: 0.5em 1em;\n  border: 1px solid\n    ${(props) =>\n      props.primary\n        ? props.theme.colors.primary\n        : props.theme.colors.lightGray};\n  border-radius: 3px;\n  &:hover {\n    cursor: pointer;\n  }\n\n  img {\n    margin-right: 5px;\n  }\n`;\n\nconst Button = ({ children, ...props }) => {\n  return <StyledButton {...props}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Styled = {\n  Wrapper: styled.div`\n    position: relative;\n    margin-left: 20px;\n    padding: 10px;\n    display: inline-block;\n    ul {\n      display: none;\n    }\n    &:hover {\n      ul {\n        display: block;\n      }\n    }\n  `,\n  MenuText: styled.div`\n    font-size: 14px;\n  `,\n\n  Menu: styled.ul`\n    background-color: ${(props) => props.theme.colors.lighterGray};\n    width: 35px;\n    padding: 5px 0;\n    margin: 0;\n    margin-left: 5px;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    z-index: 1;\n    border-radius: 5px;\n    box-shadow: 0px 3px 5px 0px #cdcdcd;\n    li {\n      list-style: none;\n      text-align: center;\n      div {\n        font-size: 11px;\n        padding: 2px 5px;\n        font-weight: 600;\n        display: block;\n        cursor: pointer;\n        &:hover {\n          background-color: ${(props) => props.theme.colors.lightGray};\n        }\n      }\n    }\n  `,\n};\n\nconst MenuDropdown = ({ option, text, onClick }) => {\n  return (\n    <Styled.Wrapper>\n      <Styled.MenuText>{text}</Styled.MenuText>\n\n      <Styled.Menu>\n        {option.map((menu) => (\n          <li key={menu.value}>\n            <div onClick={() => onClick(menu.value)}>{menu.label}</div>\n          </li>\n        ))}\n      </Styled.Menu>\n    </Styled.Wrapper>\n  );\n};\n\nexport default MenuDropdown;\n","import React, { useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Button from \"components/Button\";\nimport MenuDropdown from \"components/MenuDropdown\";\n\nconst pauseIcon = `${process.env.PUBLIC_URL}/assets/svg/pause-circle-fill.svg`;\nconst playIcon = `${process.env.PUBLIC_URL}/assets/svg/play-circle-fill.svg`;\nconst rewind = `${process.env.PUBLIC_URL}/assets/svg/rotate-left.svg`;\nconst rewindHover = `${process.env.PUBLIC_URL}/assets/svg/rotate-left-hover.svg`;\nconst fastForward = `${process.env.PUBLIC_URL}/assets/svg/rotate-right.svg`;\nconst fastForwardHover = `${process.env.PUBLIC_URL}/assets/svg/rotate-right-hover.svg`;\nconst share = `${process.env.PUBLIC_URL}/assets/svg/share.svg`;\n\nconst Styled = {\n  Wrapper: styled.section`\n    background-color: ${(props) => props.theme.colors.lighterGray};\n    height: 60px;\n    padding: 0 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  `,\n\n  LeftContorl: styled.div`\n    width: 200px;\n    text-align: right;\n  `,\n\n  MainControl: styled.div`\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n    flex: 1;\n  `,\n\n  PlayButton: styled.button`\n    background-color: transparent;\n    height: 34px;\n    width: 34px;\n    outline: 0;\n    margin: 0 10px;\n    padding: 0;\n    border: none;\n    &:hover {\n      cursor: pointer;\n    }\n  `,\n\n  RewindIcon: styled.i`\n    background: url(${rewind}) no-repeat center center;\n    height: 20px;\n    width: 20px;\n    font-size: 9px;\n    font-style: normal;\n    text-align: center;\n    padding: 6px 5px;\n    &:hover {\n      background: url(${rewindHover}) no-repeat center center;\n      cursor: pointer;\n      color: ${(props) => props.theme.colors.primary};\n    }\n  `,\n\n  FastForwardIcon: styled.i`\n    background: url(${fastForward}) no-repeat center center;\n    height: 20px;\n    width: 20px;\n    font-size: 9px;\n    font-style: normal;\n    text-align: center;\n    padding: 5px 6px;\n    &:hover {\n      background: url(${fastForwardHover}) no-repeat center center;\n      cursor: pointer;\n      color: ${(props) => props.theme.colors.primary};\n    }\n  `,\n};\n\nconst AudioControl = ({\n  status,\n  speed,\n  currentTime,\n  skip,\n  handlePlay,\n  handlePause,\n  handleSpeed,\n}) => {\n  const isPlay = status === \"pause\" || status === \"stop\";\n\n  return useMemo(\n    () => (\n      <Styled.Wrapper>\n        <Styled.MainControl>\n          <Styled.RewindIcon onClick={() => skip(currentTime - 10)}>\n            10\n          </Styled.RewindIcon>\n          <Styled.PlayButton onClick={isPlay ? handlePlay : handlePause}>\n            {isPlay ? (\n              <img src={playIcon} alt=\"play icon\" />\n            ) : (\n              <img src={pauseIcon} alt=\"pause icon\" />\n            )}\n          </Styled.PlayButton>\n          <Styled.FastForwardIcon onClick={() => skip(currentTime + 10)}>\n            10\n          </Styled.FastForwardIcon>\n          <MenuDropdown\n            onClick={handleSpeed}\n            text={`${speed} x`}\n            option={[\n              { value: 0.5, label: \"0.5x\" },\n              { value: 0.75, label: \"0.75x\" },\n              { value: 1, label: \"1x\" },\n              { value: 1.5, label: \"1.5x\" },\n              { value: 2, label: \"2x\" },\n            ]}\n          />\n        </Styled.MainControl>\n        <Styled.LeftContorl>\n          <Button type=\"button\">\n            <img src={share} alt=\"share icon\" />\n            Shared\n          </Button>\n        </Styled.LeftContorl>\n      </Styled.Wrapper>\n    ),\n    [handlePlay, handlePause, isPlay, currentTime, skip, speed, handleSpeed]\n  );\n};\n\nexport default AudioControl;\n","export function inBetween({ selected, min, max }) {\n  return selected >= min && selected < max;\n}\n\nexport function compareWord(wordOne, wordTwo) {\n\n  if (!wordOne || !wordTwo) {\n    return false;\n  }\n  return wordOne.includes(wordTwo);\n}\n\nexport function secondsToMinutes(timeInSeconds) {\n  const pad = (num, size) => {\n      return (\"000\" + num).slice(size * -1);\n    },\n    time = parseFloat(timeInSeconds).toFixed(3),\n    minutes = Math.floor(time / 60) % 60,\n    seconds = Math.floor(time - minutes * 60);\n\n  return `${pad(minutes, 2)}:${pad(seconds, 2)}`;\n}\n\nexport function percentage(partialValue, totalValue) {\n  const percentValue = (100 * partialValue) / totalValue;\n  return `${Math.round(percentValue)}%`;\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { percentage, secondsToMinutes } from \"./helpers\";\n\nconst Styled = {\n  Wrapper: styled.section`\n    background: ${(props) => props.theme.colors.dimeWhite};\n    padding: 1em;\n    border-bottom: 1px solid ${(props) => props.theme.colors.lighterGray};\n    /* flex: auto 1; */\n  `,\n\n  MainBar: styled.section`\n    display: flex;\n    flex-direction: row;\n    /* flex: auto 1; */\n  `,\n  BarContainer: styled.div`\n    width: ${(props) => (props.width ? `${props.width}px` : \"100%\")};\n    padding: 0 10px;\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    &::after {\n      content: \"\";\n      background: ${(props) => props.theme.colors.lighterGray};\n      width: 100%;\n      height: 1px;\n      position: absolute;\n      top: 50%;\n      left: 0;\n      z-index: 1;\n      transform: translate(0, -50%);\n    }\n  `,\n  BarGroup: styled.div`\n    width: 10px;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    &:hover {\n      cursor: pointer;\n    }\n\n    &::before {\n      content: \"\";\n      background: ${(props) =>\n        props.status === \"played\"\n          ? props.theme.colors.secondary\n          : \"transparent\"};\n      width: 100%;\n      height: 2px;\n\n      position: absolute;\n      top: 50%;\n      left: 0;\n      z-index: 2;\n      transform: translate(0, -50%);\n    }\n  `,\n\n  Bar: styled.div`\n    border: 1px solid\n      ${(props) => {\n        const { status } = props;\n        if (status === \"played\") {\n          return props.theme.colors.lightBlue;\n        }\n\n        return \"transparent\";\n      }};\n\n    background-color: ${(props) => {\n      const { status } = props;\n      if (status === \"played\") {\n        return props.theme.colors.lightBlue;\n      }\n\n      return \"transparent\";\n    }};\n    width: 100%;\n    height: 100%;\n    transition: 0.3s;\n\n    span {\n      background-color: ${(props) => {\n        const { status, type, theme } = props;\n        if (type === \"primary\") {\n          if (status === \"played\") {\n            return props.theme.colors.secondary;\n          }\n          return theme.colors.primary;\n        }\n        if (type === \"secondary\") {\n          if (status === \"played\") {\n            return props.theme.colors.secondary;\n          }\n          return theme.colors.purple;\n        }\n        return \"transparent\";\n      }};\n      height: 100%;\n      width: 100%;\n      display: block;\n      transition: 0.3s;\n    }\n  `,\n  BarTransparent: styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: green;\n    margin-left: 2px;\n  `,\n\n  GroupLabel: styled.div`\n    width: 250px;\n    position: relative;\n    &::after {\n      content: \"\";\n      background: ${(props) => props.theme.colors.lighterGray};\n      width: 100%;\n      height: 1px;\n      position: absolute;\n      top: 50%;\n      left: 0;\n      z-index: 1;\n      transform: translate(0, -50%);\n    }\n  `,\n\n  Label: styled.div`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    color: ${(props) =>\n      props.type === \"primary\"\n        ? props.theme.colors.purple\n        : props.theme.colors.primary};\n    font-weight: 600;\n  `,\n\n  TimeWrapper: styled.span`\n    background-color: ${(props) => props.theme.colors.lighterGray};\n    display: inline-block;\n    padding: 5px 10px;\n    border-radius: 5px;\n\n    time {\n      font-weight: 600;\n      &.dim {\n        color: ${(props) => props.theme.colors.secondary};\n      }\n    }\n  `,\n};\n\nconst AudioLine = ({\n  skip,\n  wordTimings,\n  duration,\n  currentTime,\n  userOneTime,\n  userTwoTime,\n}) => {\n  const newTime = secondsToMinutes(currentTime);\n  const totalTime = secondsToMinutes(duration);\n\n  const getStatus = useCallback(\n    ({ start }) => {\n      if (currentTime >= parseFloat(start)) {\n        return \"played\";\n      }\n      return \"unPlayed\";\n    },\n    [currentTime]\n  );\n\n  return useMemo(\n    () => (\n      <Styled.Wrapper>\n        <div>\n          <Styled.TimeWrapper>\n            <time>{newTime}</time> / <time className=\"dim\">{totalTime}</time>\n          </Styled.TimeWrapper>\n        </div>\n        <Styled.MainBar>\n          <Styled.GroupLabel>\n            <Styled.Label type=\"primary\">\n              {percentage(userOneTime, duration)} YOU\n            </Styled.Label>\n            <Styled.Label>\n              {percentage(userTwoTime, duration)} MICHEAL B.\n            </Styled.Label>\n          </Styled.GroupLabel>\n\n          <Styled.BarContainer>\n            {wordTimings.map((data, key) => {\n              if (key % 2 === 0) {\n                return data.map((time) => {\n                  const status = getStatus({\n                    start: time.startTime,\n                  });\n                  return (\n                    <Styled.BarGroup\n                      className=\"start\"\n                      status={status}\n                      key={`${time.startTime}-${time.endTime}`}\n                      onClick={() => skip(time.startTime)}\n                    >\n                      <Styled.Bar status={status} type=\"secondary\">\n                        <span />\n                      </Styled.Bar>\n                      <Styled.Bar status={status}>\n                        <span />\n                      </Styled.Bar>\n                    </Styled.BarGroup>\n                  );\n                });\n              }\n\n              return data.map((time) => {\n                const status = getStatus({\n                  start: time.startTime,\n                });\n                return (\n                  <Styled.BarGroup\n                    className=\"end\"\n                    status={status}\n                    key={`${time.startTime}-${time.endTime}`}\n                    onClick={() => skip(time.startTime)}\n                  >\n                    <Styled.Bar status={status}>\n                      <span />\n                    </Styled.Bar>\n                    <Styled.Bar status={status} type=\"primary\">\n                      <span />\n                    </Styled.Bar>\n                  </Styled.BarGroup>\n                );\n              });\n            })}\n          </Styled.BarContainer>\n        </Styled.MainBar>\n      </Styled.Wrapper>\n    ),\n    [\n      getStatus,\n      skip,\n      wordTimings,\n      newTime,\n      totalTime,\n      userOneTime,\n      userTwoTime,\n      duration,\n    ]\n  );\n};\n\nexport default AudioLine;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst searchIcon = `${process.env.PUBLIC_URL}/assets/svg/icon-search.svg`;\n\nconst Styled = {\n  Wrapper: styled.div`\n    width: 400px;\n    margin: 1em;\n    position: relative;\n    display: inline-block;\n  `,\n  Icon: styled.img`\n    width: 20px;\n    height: 20px;\n    margin-left: 10px;\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translate(0, -50%);\n    z-index: 1;\n  `,\n  Input: styled.input`\n    width: 100%;\n    font-size: 1em;\n    padding: 10px 40px;\n    margin: 0;\n    border: 1px solid ${(props) => props.theme.colors.lightGray};\n    border-radius: 3px;\n    transition: all 0.3s ease-in-out;\n  `,\n};\n\nconst SearchBox = ({ ...props }) => {\n  return (\n    <Styled.Wrapper>\n      <Styled.Icon src={searchIcon} alt=\"search icon\" />\n      <Styled.Input type=\"text\" name=\"search\" id=\"search\" {...props} />\n    </Styled.Wrapper>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { compareWord, inBetween } from \"../helpers\";\n\nconst Styled = {\n  Word: styled.span`\n    background-color: ${(props) => {\n      if (props.selected) {\n        return props.theme.colors.lightBlue;\n      }\n\n      if (props.searched) {\n        return props.theme.colors.yellow;\n      }\n\n      return \"transparent\";\n    }};\n    margin-left: 5px;\n    transition: 0.3s;\n    &:hover {\n      background-color: ${(props) => props.theme.colors.lightBlue};\n      cursor: pointer;\n    }\n  `,\n\n  Conversation: styled.div`\n    background-color: transparent;\n    display: flex;\n    flex-direction: row;\n    padding: 1em;\n    padding-left: ${(props) => (!props.active ? \"80px\" : \"20px\")};\n    &:hover {\n      background-color: ${(props) => props.theme.colors.lighterBlue};\n    }\n    time {\n      font-weight: 600;\n\n      padding: 0.25em 0.75em;\n      color: ${(props) =>\n        props.active ? props.theme.colors.purple : props.theme.colors.primary};\n    }\n\n    blockquote {\n      width: 80%;\n      border-left: 3px solid\n        ${(props) =>\n          props.primary\n            ? props.theme.colors.lightPurple\n            : props.theme.colors.lightBlue};\n      margin: 0;\n      padding: 0.25em 0.75em;\n      outline: 0;\n\n      &:before {\n        color: #ccc;\n        font-size: 4em;\n        line-height: 0.1em;\n        margin-right: 0.25em;\n        vertical-align: -0.4em;\n      }\n      .share {\n        visibility: hidden;\n        opacity: 0;\n        height: 0;\n        transition: visibility 0s linear 0.15s, opacity 0.15s linear;\n        span {\n          font-weight: 600;\n          color: ${(props) => props.theme.colors.primary};\n          text-decoration: none;\n          margin: 0.75em 0;\n          display: inline-block;\n        }\n      }\n\n      &:focus {\n        .share {\n          visibility: visible;\n          opacity: 1;\n          height: initial;\n          transition-delay: 0s;\n        }\n      }\n    }\n  `,\n\n  ClearAction: styled.span`\n    font-weight: 600;\n    color: ${(props) => props.theme.colors.primary};\n    text-decoration: none;\n    margin: 0.75em 0.25em;\n    display: inline-block;\n    &:hover {\n      cursor: pointer;\n    }\n  `,\n};\n\nconst Conversation = ({\n  active,\n  totalTime,\n  user,\n  currentTime,\n  filterWord,\n  paddingLeft,\n  skip,\n}) => (\n  <Styled.Conversation active={active} paddingLeft={paddingLeft}>\n    <time>{parseFloat(totalTime).toFixed(2)}</time>\n    <blockquote tabIndex=\"0\">\n      {user.map((data) => (\n        <Styled.Word\n          key={parseFloat(data.startTime) + parseFloat(data.endTime)}\n          searched={compareWord(data.word, filterWord)}\n          selected={inBetween({\n            selected: currentTime,\n            min: parseFloat(data.startTime),\n            max: parseFloat(data.endTime),\n          })}\n          onClick={() => skip(data.startTime)}\n        >\n          {data.word}\n        </Styled.Word>\n      ))}\n      <div className=\"share\">\n        <Styled.ClearAction onClick={() => alert(\"Share!\")}>\n          Share\n        </Styled.ClearAction>\n      </div>\n    </blockquote>\n  </Styled.Conversation>\n);\n\nexport default Conversation;\n","import React, { useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport SearchBox from \"components/SearchBox\";\n\nimport Conversation from \"./components/Conversation\";\nimport { compareWord } from \"./helpers\";\n\nconst Styled = {\n  Wrapper: styled.section`\n    flex: 1;\n  `,\n\n  ClearAction: styled.span`\n    font-weight: 600;\n    color: ${(props) => props.theme.colors.primary};\n    text-decoration: none;\n    margin: 0.75em 0.25em;\n    display: inline-block;\n    &:hover {\n      cursor: pointer;\n    }\n  `,\n};\n\nconst AudioConversation = ({\n  wordTimings,\n  currentTime,\n  filterWord,\n  searchWord,\n  handleSelectWord,\n  handleSearchWord,\n  handleClearSearch,\n}) => {\n  const countFilteredWord =\n    filterWord &&\n    wordTimings.flat().filter((data) => compareWord(data.word, filterWord));\n\n  return useMemo(\n    () => (\n      <Styled.Wrapper>\n        <SearchBox\n          placeholder=\"Search call transcript\"\n          value={searchWord}\n          onChange={handleSearchWord}\n        />\n        {filterWord && (\n          <span>\n            <strong>{countFilteredWord.length} results - </strong>\n\n            <Styled.ClearAction onClick={handleClearSearch}>\n              Clear search\n            </Styled.ClearAction>\n          </span>\n        )}\n\n        <div>\n          {wordTimings.length > 0 &&\n            wordTimings.map((user, key) => {\n              if (key % 2 === 0) {\n                const totalTime = user[user.length - 1];\n                const findWord = user.some((data) =>\n                  compareWord(data.word, filterWord)\n                );\n\n                if (!findWord && filterWord) return null;\n                return (\n                  <Conversation\n                    active\n                    key={key}\n                    totalTime={totalTime.endTime}\n                    user={user}\n                    skip={handleSelectWord}\n                    currentTime={currentTime}\n                    filterWord={filterWord}\n                  />\n                );\n              } else {\n                const totalTime = user[user.length - 1];\n                const findWord = user.some((data) =>\n                  compareWord(data.word, filterWord)\n                );\n\n                if (!findWord && filterWord) return null;\n\n                return (\n                  <Conversation\n                    paddingLeft={20}\n                    key={key}\n                    totalTime={totalTime.endTime}\n                    user={user}\n                    skip={handleSelectWord}\n                    currentTime={currentTime}\n                    filterWord={filterWord}\n                  />\n                );\n              }\n            })}\n        </div>\n      </Styled.Wrapper>\n    ),\n    [\n      wordTimings,\n      currentTime,\n      handleSelectWord,\n      filterWord,\n      handleSearchWord,\n      searchWord,\n      handleClearSearch,\n      countFilteredWord.length,\n    ]\n  );\n};\n\nexport default AudioConversation;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"@emotion/styled\";\n\nimport audioData from \"data/sample-audio.wav\";\nimport useDebounce from \"hooks/useDebounce\";\n\nimport data from \"data/transcript.json\";\n\nimport {\n  setStop,\n  setPlay,\n  setPause,\n  setSpeed,\n  updateCurrentTime,\n  getAudioData,\n  getDuration,\n  updateSearchWord,\n} from \"./audioBarSlice\";\nimport AudioControl from \"./AudioControl\";\nimport AudioLine from \"./AudioLine\";\nimport AudioConversation from \"./AudioConversation\";\n\nconst Styled = {\n  Wrapper: styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    height: 100%;\n  `,\n};\n\nconst AudioBar = (props) => {\n  const [audio] = useState(new Audio(audioData));\n  const [searchWord, setSearchWord] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const { status, duration, currentTime, filterWord, speed } = useSelector(\n    (state) => state.audioBar\n  );\n  const { wordTimings, userOne, userTwo } = useSelector(\n    (state) => state.audioBar.data\n  );\n  const debouncedSearchWord = useDebounce(searchWord, 500);\n\n  useEffect(() => {\n    const handleLoadAudio = () => {\n      dispatch(getDuration(audio.duration));\n    };\n    dispatch(getAudioData(data));\n\n    audio.addEventListener(\"loadedmetadata\", handleLoadAudio);\n    return () => {\n      audio.removeEventListener(\"loadedmetadata\", handleLoadAudio);\n    };\n  }, [audio, dispatch]);\n\n  useEffect(() => {\n    const handleUpdateTime = () => {\n      const updatedTime = parseFloat(audio.currentTime.toFixed(2));\n\n      if (audio.currentTime === audio.duration) {\n        dispatch(setStop());\n        dispatch(updateCurrentTime(updatedTime));\n      } else {\n        dispatch(updateCurrentTime(updatedTime));\n      }\n    };\n\n    audio.addEventListener(\"timeupdate\", handleUpdateTime);\n    return () => {\n      audio.removeEventListener(\"timeupdate\", handleUpdateTime);\n    };\n  }, [audio, dispatch]);\n\n  useEffect(() => {\n    if (debouncedSearchWord) {\n      dispatch(updateSearchWord(debouncedSearchWord));\n    }\n  }, [debouncedSearchWord, dispatch]);\n\n  const handlePlay = useCallback(() => {\n    audio.play();\n    dispatch(setPlay());\n  }, [audio, dispatch]);\n\n  const handlePause = useCallback(() => {\n    audio.pause();\n    dispatch(setPause());\n  }, [audio, dispatch]);\n\n  const handleSkip = useCallback(\n    (time) => {\n      audio.currentTime = parseFloat(time);\n      audio.play();\n      dispatch(setPause());\n    },\n    [audio, dispatch]\n  );\n\n  const handleSelectWord = useCallback(\n    (time) => {\n      audio.currentTime = parseFloat(time);\n      audio.pause();\n      dispatch(setPause());\n    },\n    [audio, dispatch]\n  );\n\n  const handleSearchWord = (event) => {\n    let selected = event.target.value;\n\n    if (selected) {\n      setSearchWord(event.target.value.trim());\n    } else {\n      handleClearSearch();\n    }\n  };\n\n  const handleSpeed = useCallback(\n    (selectedSpeed) => {\n      audio.playbackRate = selectedSpeed;\n      dispatch(setSpeed(selectedSpeed));\n    },\n    [audio, dispatch]\n  );\n\n  const handleClearSearch = () => {\n    dispatch(updateSearchWord(\"\"));\n    setSearchWord(\"\");\n  };\n\n  return (\n    <Styled.Wrapper>\n      <AudioControl\n        status={status}\n        currentTime={currentTime}\n        speed={speed}\n        skip={handleSkip}\n        handlePlay={handlePlay}\n        handlePause={handlePause}\n        handleSpeed={handleSpeed}\n      />\n      <AudioLine\n        duration={duration}\n        currentTime={currentTime}\n        wordTimings={wordTimings}\n        userOneTime={userOne}\n        userTwoTime={userTwo}\n        skip={handleSkip}\n      />\n      <AudioConversation\n        wordTimings={wordTimings}\n        currentTime={currentTime}\n        filterWord={filterWord}\n        searchWord={searchWord}\n        handleSelectWord={handleSelectWord}\n        handleSearchWord={handleSearchWord}\n        handleClearSearch={handleClearSearch}\n      />\n    </Styled.Wrapper>\n  );\n};\n\nexport default AudioBar;\n","import React from \"react\";\r\nimport { Global, css } from \"@emotion/core\";\r\nimport { ThemeProvider } from \"emotion-theming\";\r\n\r\nimport AudioBar from \"features/audioBar/AudioBar\";\r\n\r\nconst theme = {\r\n  colors: {\r\n    primary: \"#229ffb\",\r\n    secondary: \"#556c86\",\r\n    white: \"#ffffff\",\r\n    purple: \"#8c6dea\",\r\n    dark: \"#3a3a3a\",\r\n    dimeWhite: \"#fafbfc\",\r\n    lightBlue: \"#9dd1f7\",\r\n    lighterBlue: \"#f3faff\",\r\n    lightGray: \"#d0d9e2\",\r\n    lighterGray: \"#eff3f7\",\r\n    lightPurple: \"#ddd2ff\",\r\n  },\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Global\r\n        styles={css`\r\n          html,\r\n          body {\r\n            height: 100%;\r\n            font-family: \"Source Sans Pro\", sans-serif;\r\n            font-size: 18px;\r\n            color: ${theme.colors.dark};\r\n            margin: 0;\r\n            padding: 0;\r\n          }\r\n\r\n          *,\r\n          *::after,\r\n          *::before {\r\n            box-sizing: border-box;\r\n            -moz-osx-font-smoothing: grayscale;\r\n            -webkit-font-smoothing: antialiased;\r\n            font-smoothing: antialiased;\r\n          }\r\n        `}\r\n      />\r\n\r\n      <AudioBar />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import audioBarReducer from \"features/audioBar/audioBarSlice\";\n\nconst reducer = {\n  audioBar: audioBarReducer,\n};\n\nexport default reducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\nimport logger from \"redux-logger\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nexport default configureStore({\r\n  reducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}